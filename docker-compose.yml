services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: minimeet_app
    volumes:
      - .:/var/www/html:rw
    working_dir: /var/www/html
    ports:
      - 6006:6006
      - 8080:8080
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: minimeet_core
      DB_USERNAME: minimeet
      DB_PASSWORD: password
      FILAMENT_FILESYSTEM_DISK: s3
      FILESYSTEM_DRIVER: s3
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin123
      AWS_DEFAULT_REGION: us-east-1
      AWS_BUCKET: minimeet
      AWS_ENDPOINT: http://minio:9000
      AWS_USE_PATH_STYLE_ENDPOINT: true
      AWS_URL: http://localhost:9000/minimeet
      REDIS_HOST: redis
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
      MAIL_MAILER: smtp
      MAIL_HOST: mailpit
      MAIL_PORT: 1025
      MAIL_USERNAME: null
      MAIL_PASSWORD: null
      MAIL_ENCRYPTION: null
    depends_on:
      - mysql
      - minio
      - redis
      - mailpit

  nginx:
    image: nginx:alpine
    container_name: minimeet_nginx
    ports:
      - "80:80"
    volumes:
      - .:/var/www/html:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    container_name: minimeet_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: 'minimeet_core'
      MYSQL_USER: 'minimeet'
      MYSQL_PASSWORD: 'password'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - mysql_data:/var/lib/mysql
      - './db/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - '-ppassword'
      retries: 3
      timeout: 5s

  minio:
    image: minio/minio:latest
    container_name: minimeet_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  bucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5 &&
      mc alias set local http://minio:9000 minioadmin minioadmin123 &&
      mc mb local/minimeet &&
      mc policy set public local/minimeet
      "

  redis:
    image: redis:7-alpine
    container_name: minimeet_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 3s
      interval: 30s

  mailpit:
    image: axllent/mailpit
    container_name: minimeet_mailpit
    ports:
      - "1025:1025"
      - "8025:8025"
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

volumes:
  mysql_data:
  minio_data:
  redis_data:
